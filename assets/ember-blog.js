eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"ember-blog/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    //export default DS.FixtureAdapter.extend();\n\n    __exports__[\"default\"] = DS.RESTAdapter.extend({\n      host: \'https://public-api.wordpress.com\',\n      namespace: \'rest/v1/sites/inboxsimon.wordpress.com\'\n    });\n  });//# sourceURL=ember-blog/adapters/application.js");

;eval("define(\"ember-blog/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ember-blog/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ember-blog/app.js");

;eval("define(\"ember-blog/config/environment\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-blog\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-blog/config/environment.js");

;eval("define(\"ember-blog/config/environments/development\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-blog\",\"environment\":\"development\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":true,\"LOG_VIEW_LOOKUPS\":true}};\n  });//# sourceURL=ember-blog/config/environments/development.js");

;eval("define(\"ember-blog/config/environments/test\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    __exports__[\"default\"] = {\"modulePrefix\":\"ember-blog\",\"environment\":\"test\",\"baseURL\":\"/\",\"locationType\":\"auto\",\"EmberENV\":{\"FEATURES\":{}},\"APP\":{\"LOG_ACTIVE_GENERATION\":false,\"LOG_VIEW_LOOKUPS\":false,\"rootElement\":\"#ember-testing\"}};\n  });//# sourceURL=ember-blog/config/environments/test.js");

;eval("define(\"ember-blog/controllers/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.ArrayController.extend();\n  });//# sourceURL=ember-blog/controllers/posts.js");

;eval("define(\"ember-blog/controllers/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.ArrayController.extend();\n  });//# sourceURL=ember-blog/controllers/posts/index.js");

;eval("define(\"ember-blog/models/post\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var Post = DS.Model.extend({\n      title: DS.attr(\'string\'),\n      content: DS.attr(\'string\')\n    });\n\n    // This data now comes directly from the WordPress API    \n    // Post.reopenClass({\n    //   FIXTURES: [\n    //     {\n    //       id: 1,\n    //       title: \'Hello Ember Blog World!\',\n    //       content: \'Though many blog frameworks have been created and there is probably already a fine library in Ember, I am going rogue and making my own right now as an exercise before we dive too far into the Inbox Health code base.  It has been a very fun exercise so far!\'\n    //     },\n    //     {\n    //       id: 2,\n    //       title: \'One day...\',\n    //       content: \"One day I\'ll actually have the time and energy to write real Ember blog posts.  That\'ll be the day.\"\n    //     },\n    //     {\n    //       id: 3,\n    //       title: \"Fine.  It\'s Lorem Ipsum Time!\",\n    //       content: \"Dispassionate extraterrestrial observer! Euclid Vangelis bits of moving fluff a still more glorious dawn awaits hundreds of thousands are creatures of the cosmos, laws of physics, cosmic fugue, cosmic ocean science another world with pretty stories for which there\'s little good evidence rogue science! Globular star cluster a still more glorious dawn awaits worldlets, Vangelis! Kindling the energy hidden in matter! A very small stage in a vast cosmic arena not a sunrise but a galaxyrise colonies Flatland the sky calls to us at the edge of forever! Permanence of the stars tendrils of gossamer clouds venture.  Colonies, birth from which we spring cosmic fugue. Billions upon billions galaxies Sea of Tranquility, vastness is bearable only through love, permanence of the stars network of wormholes Rig Veda rich in heavy atoms Cambrian explosion, intelligent beings emerged into consciousness shores of the cosmic ocean muse about. Vanquish the impossible, science inconspicuous motes of rock and gas, take root and flourish! Vangelis inconspicuous motes of rock and gas! Circumnavigated permanence of the stars, venture astonishment! Culture. Brain is the seed of intelligence finite but unbounded. Corpus callosum. Hundreds of thousands science, how far away bits of moving fluff. Courage of our questions. The sky calls to us concept of the number one, something incredible is waiting to be known, science, cosmic fugue Rig Veda, the carbon in our apple pies. Radio telescope. Inconspicuous motes of rock and gas trillion, realm of the galaxies. Globular star cluster cosmic ocean tesseract, the only home we\'ve ever known vanquish the impossible something incredible is waiting to be known, corpus callosum a mote of dust suspended in a sunbeam. Worldlets tingling of the spine? Another world finite but unbounded!\"\n    //     }\n    //   ]\n    // });\n\n    __exports__[\"default\"] = Post;\n  });//# sourceURL=ember-blog/models/post.js");

;eval("define(\"ember-blog/router\", \n  [\"ember\",\"ember-blog/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'home\', {path: \'/\'});\n      this.route(\'about\');\n      this.resource(\'posts\', {path: \'/blog\'}, function(){\n        this.route(\'index\');\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ember-blog/router.js");

;eval("define(\"ember-blog/routes/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var PostsRoute = Ember.Route.extend({\n      model: function(){\n        return this.store.find(\'post\');\n      }\n    });\n\n    __exports__[\"default\"] = PostsRoute;\n  });//# sourceURL=ember-blog/routes/posts.js");

;eval("define(\"ember-blog/routes/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var PostsIndexRoute = Ember.Route.extend({\n      model: function(){\n        return this.store.find(\'post\');\n      }\n    });\n\n    __exports__[\"default\"] = PostsIndexRoute;\n  });//# sourceURL=ember-blog/routes/posts/index.js");

;eval("define(\"ember-blog/serializers/post\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var PostSerializer = DS.RESTSerializer.extend({\n      // Create new \"Posts\" objects that only extract the relevant objects from the more complext WordPress objects\n      extractArray: function(store, type, payload) {\n        delete payload.found;\n        payload.posts.forEach(function(post, index, array){\n          var newHash = {title: post.title, content: post.content, id: post.ID};\n          array[index] = newHash;\n        });\n        return this._super(store, type, payload);\n      }\n    });\n\n    __exports__[\"default\"] = PostSerializer;\n  });//# sourceURL=ember-blog/serializers/post.js");

;eval("define(\"ember-blog/templates/about\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h1>About</h1>\\n\\n<h2>Depth-first Design</h2>\\n<p>Depth-first design is a term used to describe a special strategy and brand of software development.  Though nearly every developer and designer these days favors minimalism and simplicity (in both aesthetics/UI and code organization), those of us who are depth-first designers like to extend that all the way up the product lifecycle, process management, and design process.  A software team that designs depth-first means as a team we see a problem through, start to finish, in the most logical, quick, and democratic way we sit fit -- these are all principles of the <a href=\\\"http://en.wikipedia.org/wiki/Depth-first_search\\\">Depth-first search algorithm</a>.  After we reach the end of the metaphorical tree and have a fully-functional working prototype (a minimum value prototype in <a href=\\\"http://en.wikipedia.org/wiki/Lean_software_development\\\">Lean</a> terminology), we can then go back and fill in the leaves and to make a more perfect solution, better able to estimate each of these features along the way</p>\\n\\n<p>\\nI definitely don\'t claim this is a novel or unique strategy, but I believe it\'s important to codify and formalize that the <b>completion</b> of a clean, working product is paramount.  Having a clean sight of the end goal is crucial while solving unique, detail-oriented problems, without getting too caught up in specific nomenclature or trappings of a \\\"methodology du jour\\\".  That\'s why though I love software development life management methodologies like <a href=\\\"http://en.wikipedia.org/wiki/Agile_software_development\\\">Agile</a>, <a href=\\\"http://en.wikipedia.org/wiki/Scrum_(software_development)\\\">Scrum</a>, and <a href=\\\"http://en.wikipedia.org/wiki/Kanban_(development)\\\">Kanban</a>, I only take the leanest and most useful parts of each to work with me.\\n</p>\\n\\n<h2>Contact Me!</h2>\\n\\n<h3>Simon Kaluza</h3>\\n\\n<p>I\'m a passionate technologist and engineer with a specialization in designing and implementing <a href=\\\"http://en.wikipedia.org/wiki/Health_Insurance_Portability_and_Accountability_Act\\\">HIPAA secure</a> healthcare information systems. I\'m currently employed as chief technology officer of <a href=\\\"https://inboxhealth.com\\\">Inbox Health</a> leading the engineering, cloud deployment and systems administration teams.</p>\");\n      \n    });\n  });//# sourceURL=ember-blog/templates/about.js");

;eval("define(\"ember-blog/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'bubbles\': (false)\n      },hashTypes:{\'bubbles\': \"BOOLEAN\"},hashContexts:{\'bubbles\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"link-to\", \"home\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"Home\");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'bubbles\': (false)\n      },hashTypes:{\'bubbles\': \"BOOLEAN\"},hashContexts:{\'bubbles\': depth0},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"about\", options) : helperMissing.call(depth0, \"link-to\", \"about\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"About\");\n      }\n\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\" \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'bubbles\': (false)\n      },hashTypes:{\'bubbles\': \"BOOLEAN\"},hashContexts:{\'bubbles\': depth0},inverse:self.noop,fn:self.program(8, program8, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts.index\", options) : helperMissing.call(depth0, \"link-to\", \"posts.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      return buffer;\n      }\n    function program8(depth0,data) {\n      \n      \n      data.buffer.push(\"Blog\");\n      }\n\n      data.buffer.push(\"<header>\\n<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Depth-first Design</a>\\n    </div>\\n\\n    <!-- Collect the nav links, forms, and other content for toggling -->\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"home\", options) : helperMissing.call(depth0, \"link-to\", \"home\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"about\", options) : helperMissing.call(depth0, \"link-to\", \"about\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        \");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{\n        \'tagName\': (\"li\"),\n        \'href\': (false)\n      },hashTypes:{\'tagName\': \"STRING\",\'href\': \"BOOLEAN\"},hashContexts:{\'tagName\': depth0,\'href\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts.index\", options) : helperMissing.call(depth0, \"link-to\", \"posts.index\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </ul>\\n    </div><!-- /.navbar-collapse -->\\n  </div><!-- /.container-fluid -->\\n</nav>\\n  \\n</header>\\n\\n<div class=\\\"container\\\">\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<footer>\\n<hr class=\\\"col-md-12\\\">\\n  &copy;2014 Depth-first Design\\n</footer>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-blog/templates/application.js");

;eval("define(\"ember-blog/templates/home\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h1>Home</h1>\\n<p>Welcome to my first Ember.js site!  Think of this as a combination of a business card and a fun place for me to test out various Ember.js MVC and other cutting edge javascript concepts and see how they compare to my favorite server-side MVC, Ruby on Rails!</p>\");\n      \n    });\n  });//# sourceURL=ember-blog/templates/home.js");

;eval("define(\"ember-blog/templates/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <li><a href=\\\"#\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</a></li>\\n      \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<h1>Blog</h1>\\n<p>\\nOne day, there will be riveting articles and enthralling discussions about various topics in software programming, design, and security here.  For now, hopefully the clean and fast page transitions of Ember MVC and the slick, responsive Bootstrap UI will keep you coming back for more.\\n</p>\\n<hr class=\\\"col-md-12\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\" id=\\\"leftCol\\\">        	\\n	<div class=\\\"well\\\"> \\n	  <ul class=\\\"nav nav-stacked\\\" id=\\\"sidebar\\\">\\n  	  \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	  </ul>\\n	</div>\\n  </div>\\n  \");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-blog/templates/posts.js");

;eval("define(\"ember-blog/templates/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\"><h2> \");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" </h2></div>\\n      <div class=\\\"panel-body\\\"> \");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"content\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\" </div>\\n  </div>\\n  \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"col-md-9\\\">\\n  \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ember-blog/templates/posts/index.js");

;eval("define(\"ember-blog/tests/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - adapters\');\n    test(\'adapters/application.js should pass jshint\', function() { \n      ok(true, \'adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/adapters/application.jshint.js");

;eval("define(\"ember-blog/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/app.jshint.js");

;eval("define(\"ember-blog/tests/controllers/posts.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers\');\n    test(\'controllers/posts.js should pass jshint\', function() { \n      ok(true, \'controllers/posts.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/controllers/posts.jshint.js");

;eval("define(\"ember-blog/tests/controllers/posts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - controllers/posts\');\n    test(\'controllers/posts/index.js should pass jshint\', function() { \n      ok(true, \'controllers/posts/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/controllers/posts/index.jshint.js");

;eval("define(\"ember-blog/tests/ember-blog/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-blog/tests/helpers\');\n    test(\'ember-blog/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ember-blog/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/ember-blog/tests/helpers/resolver.jshint.js");

;eval("define(\"ember-blog/tests/ember-blog/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-blog/tests/helpers\');\n    test(\'ember-blog/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ember-blog/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/ember-blog/tests/helpers/start-app.jshint.js");

;eval("define(\"ember-blog/tests/ember-blog/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ember-blog/tests\');\n    test(\'ember-blog/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ember-blog/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/ember-blog/tests/test-helper.jshint.js");

;eval("define(\"ember-blog/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ember-blog/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ember-blog/tests/helpers/resolver.js");

;eval("define(\"ember-blog/tests/helpers/start-app\", \n  [\"ember\",\"ember-blog/app\",\"ember-blog/router\",\"ember-blog/config/environments/test\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=ember-blog/tests/helpers/start-app.js");

;eval("define(\"ember-blog/tests/models/post.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - models\');\n    test(\'models/post.js should pass jshint\', function() { \n      ok(true, \'models/post.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/models/post.jshint.js");

;eval("define(\"ember-blog/tests/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'router.js should pass jshint\', function() { \n      ok(true, \'router.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/router.jshint.js");

;eval("define(\"ember-blog/tests/routes/posts.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes\');\n    test(\'routes/posts.js should pass jshint\', function() { \n      ok(true, \'routes/posts.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/routes/posts.jshint.js");

;eval("define(\"ember-blog/tests/routes/posts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - routes/posts\');\n    test(\'routes/posts/index.js should pass jshint\', function() { \n      ok(true, \'routes/posts/index.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/routes/posts/index.jshint.js");

;eval("define(\"ember-blog/tests/serializers/post.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - serializers\');\n    test(\'serializers/post.js should pass jshint\', function() { \n      ok(true, \'serializers/post.js should pass jshint.\'); \n    });\n  });//# sourceURL=ember-blog/tests/serializers/post.jshint.js");

;eval("define(\"ember-blog/tests/test-helper\", \n  [\"ember-blog/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n\n    QUnit.config.urlConfig.push({ id: \'nocontainer\', label: \'Hide container\'});\n    if (QUnit.urlParams.nocontainer) {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'hidden\';\n    } else {\n      document.getElementById(\'ember-testing-container\').style.visibility = \'visible\';\n    }\n  });//# sourceURL=ember-blog/tests/test-helper.js");
